#!/bin/js
#
#   We can create jobs with & at the end of the line
#   Also we can print and manipulate them.
#

function background() {
	sleep 1 && echo -n "hello " &
}

function background2() {
	sleep 3 && echo "world" &
}


// N.B JavaScript stays single threaded througout, it is bash that forks processes
background();
sleep 2 && echo -n "cruel " &
background2();

// before sleeping lets print whats going on in the background

var jobsArray = $.getJobs();

for (var j = 0 ; j < jobsArray.length ; j++ ) {	
//	$.println("[" + jobsArray[j].id +"] pid=" + jobsArray[j].pid)
	$.info(0, "jobs", jobsArray[j].command);

	if ( jobsArray[j].command.indexOf("cruel") > -1 ) {

		// delete the jobs with cludgy syntax TODO jobsArray[j].kill()
		$.setEnv("TO_KILL", jobsArray[j].pid);
		echo killing id ${TO_KILL}
		kill ${TO_KILL}

	}
	
	// TODO jobsArray[j].kill();
	// TODO jobsArray[j].hup();
	// TODO jobsArray[j].waitFor();
	

}

