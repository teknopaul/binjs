This file is throw.def, from which is created throw.c.
It implements the builtin "throw" in libbash.

$PRODUCES throw.c

$BUILTIN throw
$FUNCTION throw_builtin
$SHORT_DOC throw throw an exception in JavaScript land

Syntax is just to supply a string for the Exception 
mv file newfile || throw "cant move file"

Options:
	none

Exit Status:
The return code is 1
$END

#include <config.h>

#include "bashtypes.h"
#include "posixstat.h"

#include <stdio.h>

#include "bashansi.h"

#if defined (HAVE_UNISTD_H)
#  include <unistd.h>
#endif

#include <signal.h>
#include <errno.h>

#ifdef __CYGWIN__
#  include <fcntl.h>
#  include <io.h>
#endif

#include "../bashintl.h"

#include "../shell.h"
#include "common.h"

#include <shtty.h>

#if defined (READLINE)
#include "../bashline.h"
#include <readline/readline.h>
#endif

#if defined (BUFFERED_INPUT)
#  include "input.h"
#endif

#if !defined(errno)
extern int errno;
#endif


/* 
 * Throw just sets the environment variable _EX to a string.
 * TODO shold probalby send SIGPIPEs and  do clever stuff
 * to exit everything fast and clean
 */
int
throw_builtin (list)
     WORD_LIST *list;
{

  char *temp;
  if ( list && (temp = list->word->word) ) {
	bind_variable("_EX", temp, 0);
  }
  else {
    bind_variable("_EX", "Bash Error", 0);
  }
  return 1;

}

